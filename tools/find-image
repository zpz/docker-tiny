#!/bin/bash

# Find the latest tag of an image between local and remote,
# assuming the tags are sortable.
# The sole input is the name of the image, with repository as needed,
# e.g.
#     debian
#     zppz/py3

set -e

NAME="$1"


function find-latest-local-image {
    if [[ "${NAME}" == *:* ]]; then
        if [ $(docker images -q "${NAME}") ]; then
            # Exists locally.
            echo "${NAME}"
        fi
        return 0
    fi

    tags=$(docker image ls ${NAME} --format "{{.Tag}}")
    if [ -z "${tags}" ]; then
        return 0
    fi

    if [[ $(echo "${tags}" |grep latest) == latest ]]; then
        echo "${NAME}:latest"
        return 0
    fi

    tag=$(echo "${tags}" |sort |tail -n 1)
    echo "${NAME}:${tag}"
}


function find-latest-remote-image {
    local name
    if [[ "${NAME}" != */* ]]; then
        name=library/${NAME}
    else
        name=${NAME}
    fi

    if [[ "${NAME}" == *:* ]]; then
        name="${name%:*}"
        tag="${name##*:}"
        url=https://hub.docker.com/v2/repositories/${name}/tags/${tag}/
        if $(curl --silent -f --head -lL ${url} > /dev/null); then
            # Exists remotely.
            echo "${NAME}"
        fi
        return 0
    fi

    url=https://hub.docker.com/v2/repositories/${name}/tags/
    tags="$(curl --silent -f -lL ${url})"

    if [[ "${tags}" == *\"results\":\[\]\} ]]; then
        return 0
    fi

    tags="$(echo "${tags}" | tr -d '{}[]' | tr ',' '\n' | grep \"name\")"
    if [ -z "${tags}" ]; then
        return 0
    fi

    tags="$(echo $tags | tr -d '"' | sed 's/name://g')"
    tag=$(echo "${tags}" | tr ' ' '\n' | sort -r | head -n 1)
    echo "${NAME}:${tag}"
}


tag_local=$(find-latest-local-image)
tag_remote=$(find-latest-remote-image)
if [ "${tag_local}" ]; then
    if [ "${tag_remote}" ]; then
        if [[ "${tag_local}" < "${tag_remote}" ]]; then
            echo "${tag_remote}"
        else
            echo "${tag_local}"
        fi
    else
        echo "${tag_local}"
    fi
    exit 0
else
    if [ "${tag_remote}" ]; then
        echo "${tag_remote}"
        exit 0
    else
        >&2 echo could not find image "${NAME}"
        exit 1
    fi
fi
